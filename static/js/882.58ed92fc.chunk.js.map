{"version":3,"file":"static/js/882.58ed92fc.chunk.js","mappings":"qPAEaA,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8I,mBCQtBC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAiB1B,OACEC,EAAAA,EAAAA,KAAA,QAAMC,SAhBa,SAACC,GACpBA,EAAIC,iBACJN,EAAMO,SAAQ,SAACC,GACb,GACEA,EAAKC,QAAUJ,EAAIK,OAAOC,SAASF,MAAMG,OACzCJ,EAAKK,WAAaR,EAAIK,OAAOC,SAASE,SAASD,MAE/C,OAAOd,GAASgB,EAAAA,EAAAA,IAAMN,EAAKC,QAbTM,EAAAA,GAAAA,MAAY,+BAiBlC,IACAV,EAAIK,OAAOM,OACb,EAG+BC,UAC3BC,EAAAA,EAAAA,MAACzB,EAAS,CAAAwB,SAAA,EACRd,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CAACC,KAAK,QAAQC,MAAM,QAAQC,QAAQ,WAAWC,UAAQ,KACjEpB,EAAAA,EAAAA,KAACgB,EAAAA,EAAS,CACRK,KAAK,WACLJ,KAAK,WACLC,MAAM,WACNC,QAAQ,WACRC,UAAQ,KAEVpB,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CAACD,KAAK,SAASF,QAAQ,YAAWL,SAAC,YAG1Cd,EAAAA,EAAAA,KAACuB,EAAAA,GAAO,QAIhB,EC7Ce,SAASC,IACtB,OACET,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEd,EAAAA,EAAAA,KAAA,MAAIyB,MAAO,CAAEC,UAAW,UAAWZ,SAAC,gBACpCd,EAAAA,EAAAA,KAACN,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.tsx","components/LoginForm/LoginForm.tsx","pages/login.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 40px;\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectUsers } from \"../../redux/selectors\";\nimport { logIn } from \"../../redux/authSlice\";\nimport { TextField, Button } from \"@mui/material\";\nimport { StyledDiv } from \"./LoginForm.styled\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\ntype Users = { login: string; password: string };\nconst notifyError = () => toast.error(\"Incorrect login or password.\");\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(selectUsers);\n\n  const handleSubmit = (evt: any): void => {\n    evt.preventDefault();\n    users.forEach((user: Users) => {\n      if (\n        user.login === evt.target.elements.login.value &&\n        user.password === evt.target.elements.password.value\n      ) {\n        return dispatch(logIn(user.login));\n      } else {\n        notifyError();\n      }\n    });\n    evt.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <StyledDiv>\n        <TextField name=\"login\" label=\"Login\" variant=\"outlined\" required />\n        <TextField\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          variant=\"outlined\"\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Log in\n        </Button>\n        <Toaster />\n      </StyledDiv>\n    </form>\n  );\n};\n","import { LoginForm } from \"../components/LoginForm/LoginForm\";\n\nexport default function Login() {\n  return (\n    <div>\n      <h2 style={{ textAlign: \"center\" }}>Login page</h2>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["StyledDiv","styled","_templateObject","_taggedTemplateLiteral","LoginForm","dispatch","useDispatch","users","useSelector","selectUsers","_jsx","onSubmit","evt","preventDefault","forEach","user","login","target","elements","value","password","logIn","toast","reset","children","_jsxs","TextField","name","label","variant","required","type","Button","Toaster","Login","style","textAlign"],"sourceRoot":""}